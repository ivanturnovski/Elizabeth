<link href="https://unpkg.com/swiper@7/swiper-bundle.min.css" rel="stylesheet"/>
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

<style>
    .swiper-button-prev,
    .swiper-button-next {
        color: #000;
        top: auto !important;
        height: 20px;
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
        font-size: 20px;
    }

    .swiper-pagination {
        color: black !important;
        bottom: 0 !important;
    }

    .swiper-pagination-bullet-active {
        background: #000 !important;
    }

    .product--information {
        height: fit-content;
    }
</style>

<div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
        <div class="product--medias">
            <div class="swiper h-94">
                <div class="swiper-wrapper">
                    {% for media in product.media %}
                        <div class="swiper-slide">
                            <div class="h-8- overflow-hidden p-2">
                                {%render 'product-media', media: media %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                <div class="swiper-pagination"></div>
                <div class="swiper-button-prev"></div>
                <div class="swiper-button-next"></div>
            </div>
        </div>
        <div class="product--information sticky top-5 p-2">
            {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {% for block in section.blocks %}
                    {% case block.type %}
                        {% when 'vendor' %}
                            <div class="my-3">
                                <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                            </div>
                        {% when 'title' %}
                            <div class="my-3">
                                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
                            </div>
                        {% when 'price' %}
                            <div class="my-3" id="price-{{section.id}}">
                                {% assign product_price = product.selected_or_first_available_variant %}
                                <span class="text-base text-gray-500 line-through">{{ product_price.compare_at_price | money }}</span>
                                <span class="text-base text-gray-500">{{ product_price.price | money }}</span>
                                {% if product_price.price < product_price.compare_at_price %}
                                    <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                                {% endif %}
                            </div>
                        {% when 'variant_selector' %}
                            <div class="my-3">
                                {% unless product.has_only_default_variant %}
                                    <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                                        {% for option in product.options_with_values %}
                                            <label for="option-{{ section.id }}-{{ forloop.index }}">{{ option.name }}</label>
                                            <div class="my-2">
                                                <select class="w-full border py-1 px-3" id="option-{{ section.id }}-{{ forloop.index }}" name="options[{{ option.name | escape }}]">
                                                    {% for value in option.values %}
                                                        <option value="{{ value | escape }}" {% if option.selected_value==value %} selected="selected" {% endif %}>
                                                            {{ value }}
                                                        </option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <script type="application/json">
                                                {{ product.variants | json }}
                                            </script>
                                        {% endfor %}
                                    </variant-selector>
                                {% endunless %}
                            </div>
                        {% when 'quantity'%}
                            <div class="my-3">
                                <label for="quantity-{{ section.id }}">Quantity</label>
                                <div class="my-2">
                                    <input class="w-full border px-3 py-2" id="quantity-{{ section.id }}" min="1" name="quantity" type="number" value="1">
                                </div>
                            </div>
                        {% when 'description' %}
                            <div class="my-3">
                                <div class="text-gray-700">{{ product.description }}</div>
                            </div>
                        {% when 'checkout_button' %}
                            <div class="my-3">
                                <button type="submit" name="add" class="w-full p-5 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2" {% if product.selected_or_first_available_variant.available==false %} disabled {% endif %}>

                                    {% if product.selected_or_first_available_variant.available == false %}
                                        Sold Out
                                    {% else %}
                                        Add to Cart
                                    {% endif %}
                                </button>
                            </div>
                        {% else %}
                    {% endcase %}
                {% endfor %}
            {% endform %}
        </div>
    </div>
</div>

{% schema %}

{
    "name": "Product",
    "blocks": [
        {
            "type": "vendor",
            "name": "Vendor",
            "limit": 1
        }, {
            "type": "title",
            "name": "Title",
            "limit": 1
        }, {
            "type": "price",
            "name": "Price",
            "limit": 1
        }, {
            "type": "variant_selector",
            "name": "Variant Selector",
            "limit": 1
        }, {
            "type": "quantity",
            "name": "Quantity",
            "limit": 1
        }, {
            "type": "description",
            "name": "Description",
            "limit": 1
        }, {
            "type": "checkout_button",
            "name": "Checkout Button",
            "limit": 1
        }
    ]
}

{% endschema %}

<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }
        onVariantChange() {
            console.log("I have changed the variant selector");
            this.getSelectedOptions();
            this.getSelectedVariant();
            if(this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }
        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
            console.log(this.options);
        }
        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }
        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        }
                    ).includes(false);
                    if (findings) return variant;

                }
            );
            console.log(this.currentVariant);
        }
        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
            .then((response) => response.text())
            .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');
                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);

                if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
            });
        }


    }
    customElements.define("variant-selector", VariantSelector);
</script>
<script>
    const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
            el: '.swiper-pagination'
        },
        navigation: {
            prevEl: '.swiper-button-prev',
            nextEl: '.swiper-button-next'
        }
    })
</script>